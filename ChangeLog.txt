Name: William Lai
Date: 01-02-2015
Description: Documentation Part 2
    * Did most of documentation for Standard mode
    * StandardComputerPlayer and StandardBoard still need documenting

Name: William Lai
Date: 01-01-2015
Description: Documentation Part 1
    * Did some easy documentation (superclass stuff mostly)

Name: William Lai
Date: 01-01-2015
Description: Some of previous few commits applied to Losers and Alice
    * Some of changes to code in previous three commits applied to Losers and Alice

Name: William Lai
Date: 12-31-2014
Description: Incorporated algebraic
    * StandardGame now supports reading in an algebraic movelist to setup a position (algebraic parsing still requires testing)
    * processMove now takes in bool to control animation or not

Name: William Lai
Date: 12-30-2014
Description: Upgraded Move class; documenting; algebraic
    * Move class now allows for pawn promotion field (still needs incorporation)
    * Now reads algebraic notation (still needs testing and incorporation)
    * Added crucial documentation (e.g. how squares are represented)
    * Threefold repetition currently conflicts with undo, so need to fix that
    * Would be nice if we could decouple graphics, board, and game, but might not be possible

Name: William Lai
Date: 12-29-2014
Description: Threefold repetition
    * Threefold repetition check now implemented via HashMap (so far in StandardGame only)
    * Still need testing for both 50 move rule and threefold repetition

Name: William Lai
Date: 12-27-2014
Description: Repackaging
    * Each game type now has its own package
    * Some changes to superclasses were made to accommodate this new packaging structure

Name: William Lai
Date: 12-26-2014
Description: Fixed more bugs
    * Alice Chess promotion now works as intended
    * Alice Chess now features really dumb AI
    * Highlighting of square a8 is now correct
    * Alice Chess FEN loading works

Name: William Lai
Date: 12-26-2014
Description: Alice Chess mostly working; changing ChangeLog structure
    * Alice Chess is now mostly working, but still need to check for promotion and edge cases, as well as work on AI
    * ChangeLog will no longer follow file-by-file entries, as this is a bit too restrictive
    * Fixed bugs in AliceBoard that allowed moves that left king in check
    * Merged in-progress branch into master and unpublished in-progress branch. Also set previous commit (pre-Alice Chess) as v1.0 release.

Name: Vincent Wong
Date: 01-08-2014
Description: Fixed animation when castling, moving into a green square, and game ending
    * src/chess/*ChessBoard.java: Added utility functions for conversion between (row, col) and square #
    * src/chess/*ChessGameGraphics.java: Added graphical state tracking of the board, updated once per game loop iteration. For Standard, added a castling animation
    * src/chess/*ChessGame.java: Added small loop after game ends to allow animation to finish

Name: William Lai
Date: 01-07-2014
Description: Merged restruct back into master, following changes listed are for the previous three commits together
    * src/chess/ComputerPlayer.java: Now a superclass of StandardComputerPlayer and LosersComputerPlayer.
    * src/chess/Definitions.java: Fixed a subtle bug in finding orthogonal attacks that was causing orthogonal moves to be calculated incorrectly on 6 squares on the b-file
    * src/chess/GameApplet.java: Removed duplicate call of instantiating thread, which was causing everything to be happening doubly
    * src/chess/HumanPlayer.java: Now a superclass of StandardHumanPlayer and LosersComputerPlayer.
    * src/chess/LosersChessBoard.java: Fixed bug that was causing the capture of kings to be handled improperly
    * src/chess/LosersChessGame.java: Now correctly ends game with proper message.

Name: Vincent Wong
Date: 01-05-2014
Description: Separated graphics tasks from GameApplet, revamped how animation is done
    * src/chess/GameApplet.java: Adds GameGraphics as a JPanel which handles _all_ painting
    * src/chess/StandardChessGameGraphics.java: Handles move animation internally in a non-blocking manner

Name: William Lai
Date: 01-01-2014
Description: Implemented Loser's Chess
    * src/chess/ComputerPlayer.java: Added AI logic for Loser's Chess
    * src/chess/Definitions.java: Made isAttacked function more flexible
    * src/chess/HumanPlayer.java: Now handles Loser's Chess move selections
    * src/chess/StandardChessBoard.java: Moved all of processMove into StandardChessBoard from StandardChessGame
    * src/chess/StandardChessGame.java: Moved all of processMove into StandardChessBoard from StandardChessGame
    * src/chess/LosersChessBoard.java: Board for Loser's Chess
    * src/chess/LosersChessGame.java: Game for Loser's Chess
    * src/chess/Main.java: New class for running as standalone app (since there are now multiple game choices)

Name: Vincent Wong
Date: 12-31-2013
Description: Added simple background, made undo button prettier
    * src/Images/buttonUndo*: Prettier undo buttons
    * src/chess/StandardChessGameGraphics.java: Added code for painting an app background
    * src/chess/StandardChessGame.java: Added code to call painting an app background
    * src/chess/EasyButton.java: Made clicking a proper two step process, with a different
    image on each stage
    * src/chess/StandardChessGameGUI.java: Added code to properly use the tweaked EasyButton,
    along with a focuslistener to properly deal with lost focus
    

Name: William Lai
Date: 12-31-2013
Description: Cleaned up undo function
    * src/chess/StandardChessGame.java: Undo function is disabled during a CPU player's turn and also disables the instant the player has clicked a destination square (to prevent strange situations where two moves are undone but the player's move was also processed and the moving piece changed colors).

Name: Eric Du
Date: 12-29-2013
Description: Implemented the undo function
    * src/chess/StandardChessBoard.java: Added a function to decrement turn count when undoing
    * src/chess/StandardChessGame.java: Added a stack that stores each move in FEN and pops when necesssary to undo

Name: William Lai
Date: 12-28-2013
Description: Made bitboard member variables private
    * src/chess/Board.java: Moved bitboard member variables (long) from StandardChessBoard and made them private, creating accessor and mutator functions necessary in the process
    * src/chess/ComputerPlayer.java: Updated to use new functions from Board
    * src/chess/Definitions.java: Updated to use new functions from Board
    * src/chess/StandardChessGame.java: Removed bitboard member variables (long) and moved to Board class; also updated to use new functions from Board

Name: Vincent Wong
Date: 12-24-2013
Description: Hacked together a button class, bundled Lucida Bright fonts
    * src/Fonts/*: Added the Lucida Bright family
    * src/chess/StandardChessGameGraphics.java: Added code that loads Lucida Bright fonts to ensure their availability. Also, added a drawGUI function
    * src/chess/StandardChessGame.java: Added GUI object
    * src/chess/StandardChessGameGUI.java: New class that will manage graphical user interfacing, including buttons and menu in the future
    * src/chess/EasyButton.java: Quick implementation of a simple button that has an associated position, size, image, and callback action
    * README.md: Switched readme for markdown

Name: William Lai
Date: 12-24-2013
Description: New option to choose color
    * src/chess/StandardChessGame.java: Added new option to allow player to choose color

Name: William Lai
Date: 12-24-2013
Description: Bug fix
    * src/chess/ComputerPlayer.java: In static evaluation, check for game-ending conditions again (since bitboards make those operations faster), which prevents a bug that allows AI to make moves that leave the king in check.
    * src/chess/StandardChessGame.java: Added main method so that project can be run as an application and exported as a runnable JAR file (in addition to being able to be run as an applet).

Name: William Lai
Date: 12-24-2013
Description: Bug fixes
    * src/chess/ComputerPlayer.java: Rolled back check extensions (for speed considerations) and fixed bug that made illegal moves in the AI evaluation (using hash moves that weren't legal).
    * src/chess/StandardChessGame.java: Fixed bug that would end game if the first player gave check (credit to Eric (edu5) for finding bug).

Name: William Lai
Date: 12-23-2013
Description: Slight improvement to Check Extension
     * src/chess/ComputerPlayer.java: Slight improvement to check extension by only counting check escapes after the first one

Name: William Lai
Date: 12-23-2013
Description: AI extensions, pop-up message at end of game
     * src/chess/ComputerPlayer.java: Now properly implements extensions when a player moves out of check, and when an equal or better capture is made
     * src/chess/Definitions.java: Added more helper functions for move generation
     * src/StandardChessBoard.java: Implemented toString function
     * src/StandardChessGame.java: Now pops up message at end of game instead of trying to write to window

Name: William Lai
Date: 12-23-2013
Description: Bug fixes
    * src/chess/HumanPlayer.java: Fixed bug that made it impossible for player to make a capture.
    * src/chess/StandardChessBoard.java: Fixed bug that made it possible for a pawn to move two squares if a friendly pawn is threatening the same square (credit to Eric (edu5) for finding bug).

Name: William Lai
Date: 12-23-2013
Description: Cleaned up code, removed Piece class and subclasses, AI now much faster (on the order of 10x)
    * REMOVED Bishop.java, King.java, Knight.java, Pawn.java, Piece.java, Queen.java, Rook.java
    * src/chess/Board.java: Stripped down to bare bones. May add some more functionality back when variants are made
    * src/chess/ComputerPlayer.java: Adapted functions to use char representation of pieces (instead of old Piece class), and now use timer to make the AI think for a roughly fixed amount of time
    * src/chess/Definitions.java: Added constant for max thinking time
    * src/chess/HumanPlayer.java: Adapted functions to use char representation of pieces
    * src/chess/StandardChessBoard.java: Adapted functions to use char representation of pieces; removed unnecessary code
    * src/chess/StandardChessGame.java: Adapted functions to use char representation of pieces
    * src/chess/StandardChessGameAnimation.java: Adapted functions to use char representation of pieces
    * src/chess/StandardChessGameGraphics.java: Adapted functions to use char representation of pieces

Name: William Lai
Date: 12-20-2013
Description: Bitboards, code still messy
    * src/chess/Definitions.java: Added many bitboard related static functions and constants; implemented "exploding" bitboards
    * src/chess/HumanPlayer.java: Changed to accommodate bitboards
    * src/chess/StandardChessBoard.java: Bitboard overhaul
    * src/chess/StandardChessGame.java: Changed to accommodate bitboards
    * src/chess/StandardChessGameGraphics.java: Changed to accommodate bitboards

Name: William Lai
Date: 12-14-2013
Description: Overhaul mostly complete
    * src/chess/Board.java: Turned into abstract class
    * src/chess/ComputerPlayer.java: Killer moves, iterative deepening, move ordering, depth extension on check
    * src/chess/Game.java: Removed unnecessary functions
    * src/chess/Move.java: Now prints long notation
    * src/chess/StandardChessBoard.java: Finished integrating old Board class into this one
    * src/chess/StandardChessGame.java: A lot removed and moved into StandardChessBoard

Name: William Lai
Date: 12-01-2013
Description: Bug fix
    * src/chess/ComputerPlayer.java: Fixed bug that was causing a crash when the AI was seeing a checkmate in its calculation.

Name: William Lai
Date: 11-29-2013
Description: More AI changes, work in progress
    * TODO.txt: See this file for changes to be made and changes in progress
    * src/chess/Board.java: Changed to an abstract class
    * src/chess/ComputerPlayer.java: Fixed alpha-beta pruning, added iterative deepening search, added hash move list (moves remembered from previous shallower searches). Also now reports time taken at each depth.
    * src/chess/Definitions.java: Changed definition of depth
    * src/chess/StandardChessGame.java: Bug fix so that game ends when AI returns null move, instead of crashing
    * src/chess/StandardChessBoard.java: New class derived from Board that will contain game logic. Still in progress of integrating this into other classes.

Name: William Lai
Date: 11-19-2013
Description: Many AI changes, work in progress
    * TODO.txt: Many new changes to come soon. Most important is restructuring of Game-Board relationship so that we don't have to pass a Game object along each time we evaluate a new node. So we will be having some game logic within the Board class (like en passant, castling, etc.). Probably will be implemented as a subclass of Board).
    * src/chess/Board.java: Implemented position-to-FEN function.
    * src/chess/ComputerPlayer.java: Implemented alpha-beta pruning, with captures being prioritized for optimization in positions with many captures. Also implemented a small opening book hash map.
    * src/chess/Move.java: Added copy constructor.
    * src/chess/Piece.java: Changed toString function so that the toString function of Board is more readable.
    * src/chess/StandardChessGame.java: Upgraded pseudo-FEN parser to a real FEN parser. Also implemented part of position-to-FEN function (another reason why Board should have some game logic, so we don't need this function here).
    * src/chess/StandardChessGameGraphics.java: Because Piece's toString function was changed, changed had to be made to the image-loading.

Name: William Lai
Date: 10-20-2013
Description: Yet another bug fix, added end-of-game message
    * src/chess/ComputerPlayer.java: Fixed AI freezing from checkmate in one moves.
    * src/chess/StandardChessGame.java: Now prints message when game ends.
    * src/chess/StandardChessGameGraphics.java: Added function to print game-ending message.

Name: William Lai
Date: 10-20-2013
Description: Another bug fix, improved pseudo-FEN parser
    * src/chess/StandardChessGame.java: Fixed inability of AI to decide how to promote pawn. Also improved pseudo-FEN parser to allow for deciding whose move it is and whether castling is available or not.
    * src/chess/ComputerPlayer.java: Improved AI so that it now wants to promote pawns.

Name: William Lai
Date: 10-20-2013
Description: Several bug fixes, pseudo-FEN parser
    * src/chess/Pawn.java: Now has no moves if it's on the 1st or 8th row. This is so that the AI doesn't freeze (since it is unable to account for promotions at the moment).
    * src/chess/StandardChessGame.java: Created pseudo-FEN parser so that you can load a position into the program for testing purposes. Also fixed en passant bug where the captured pawn did not get removed from the board.

Name: William Lai
Date: 10-20-2013
Description: Slight efficiency and AI improvement, packaged files
    * src/chess/*.java: Moved files into a package named "chess"
    * src/chess/Board.java: Added new private member variables for the squares of each King, to aid in efficiency elsewhere
    * src/chess/ComputerPlayer.java: Fixed the AI refusing to make move, as well as AI not seeing incoming checkmate
    * src/chess/StandardChessGame.java: Used Board.java change to efficiently find king locations when checking for check. Also now has rook animating after king when castling

Name: Vincent Wong
Date: 10-19-2013
Description: Selected block highlight
    * src/StandardChessGame.java: Slight modification to paint order
    * src/StandardChessGameGraphics.java: Uses an actual image to highlight a selected block
    * New files: Images/blockSelected.png
    
Name: William Lai
Date: 10-18-2013
Description: Restructuring of program
    * src/Board.java: Included "state" variables to determine if a board represents checkmate/stalemate for either side, to prevent recalculating for subsequent calls for the same position
    * src/ComputerPlayer.java: Changed static evaluation to account for changes to Board.java
    * src/Definitions.java: Added new enum for the "state" of a board
    * src/StandardChessGame.java: Changed move procedure to account for changes to Board.java. Also fixed the inability for the game to detect checkmate/stalemate (a bug that came up from the last commit).
    * TODO.txt: New file. A file that we can put tasks that need to be done in our project.

Name: Vincent Wong
Date: 10-17-2013
Description: Threading, game loop, highlighted blocks
    * src/Player.java: Added threading components. Added knowledge of color
    * src/ComputerPlayer.java: Threaded. promptMove to start evaluating
    board, isDone and getMove to retrieve results
    * src/HumanPlayer.java: Threaded. promptMove to activate mouse listener,
    isDone and getMove to retrieve results
    * src/Game.java: Removed getHumanMove
    * src/StandardChessGame.java: Added game loop, each tick 30 ms. Moved
    selection mechanism to HumanPlayer.
    * src/StandardChessGameAnimation.java: Adjusted animation for slightly
    changed functions
    * src/StandardChessGameGraphics.java: Added function to highlight
    blocks.
    * New files: Images/blockW.png, Images/blockB.png, Images/blockMovable.png

Name: William Lai
Date: 10-15-2013
Description: 2-ply brute force AI
    * src/ComputerPlayer.java: Upgraded AI to 2-ply (changeable, but >3 ply is untolerably slow). Now knows how to checkmate.
    * src/Definitions.java: Added PLY_DEPTH constant that can be changed for setting AI depth
    * src/StandardChessGame.java: Added stopgap in checkBoardState. Still need something to bring applet to graceful end.

Name: William Lai
Date: 10-15-2013
Description: Readme update
    * README.txt: Added instructions on how to download and run program from Eclipse.

Name: William Lai
Date: 10-15-2013
Description: Static Evaluation 1-ply AI
    * src/ComputerPlayer.java: New file. Computer player uses static board evaluation (1-ply) to make its moves.
    * src/Game.java: Added abstract function getHumanMove
    * src/HumanPlayer.java: Added new constructor, prompts move by using call to its Game object
    * src/Player.java: Player now has a Game object associated with it
    * src/StandardChessGame.java: Added new helper functions and moved some more lines from moveSelected to processMove for flexibility.

Name: William Lai
Date: 10-14-2013
Description: Stalemate, legal move lists, animation tweaking
    * src/Game.java: Changed some function signatures for flexibility
    * src/King.java: Changed some legal move conditions
    * src/StandardChessGame.java: Implemented stalemate, added allMoves function for future utility
    * src/StandardChessGameAnimation.java: Tweaked animation parameters to make the UI a bit smoother.

Name: Vincent Wong
Date: 10-10-2013
Description: Added board markers, added player names
    * src/StandardChessGame.java: Implemented a bit of Player integration
    * src/StandardChessGameGraphics.java: Added board marker painting, player name painting
    * src/HumanPlayer.java: New file. Doesn't really do anything though except allows instantiation

Name: Vincent Wong
Date: 10-03-2013
Description: Added standard chess piece images, added animation
    * src/StandardChessGame.java: Tweaked selection mechanics (left click to select and move,
    right click to deselect).
    * src/StandardChessGameGraphics.java: Added utility painting functions for animation.
    * src/StandardChessGameAnimation.java: New class. Runs a thread to animate chess moves.

Name: William Lai
Date: 10-03-2013
Description: Implemented pawn promotion
    * src/StandardChessGame.java: Forgot about pawn promotion. It is now implemented.

Name: William Lai
Date: 10-02-2013
Description: Fixed knight check bug
    * src/StandardChessGame.java: Fixed bug that did not account for knight when resolving checks. Made isInWay function more robust to handle null piece and knights.

Name: William Lai
Date: 09-25-2013
Description: Finished game logic, started adding test functions
     * src/Board.java: Added removePiece function for en passant.
     * src/StandardChessGame.java: Added en passant logic. Started writing function to parse algebraic notation and make moves from them.

Name: Eric Du
Date: 09-23-2013
Description: Changed function names to keep consistency with program (getThreats, getMoves)
     * src/Board.java: Added clone function

Name: William Lai
Date: 09-23-2013
Description: Been a little while. More game logic, almost all done now.
     * src/King.java: Added castling as possible moves
     * src/Player.java: Fixed a silly comment typo
     * src/StandardChessGame.java: Finished off castling conditionals and implemented a checkmate check.

Name: William Lai
Date: 04-09-2013
Description: Added and fixed more game logic
     * src/Definitions.java: Added helper function flip for changing colors
     * src/StandardChessGame.java: Changed initial turn color to White, fixed isLegalMove function (at least for now), moved part of function to new helper function hasPieceInWay, created new helper function flipTurn, cleaned up and fixed some other code

Name: William Lai
Date: 04-07-2013
Description: Added some functions to aid in game logic
     * src/Bishop.java: Added threats function
     * src/King.java: Added threats function
     * src/Knight.java: Added threats function
     * src/Move.java: Overrode equals function of Object to allow Arraylist's contains method to work as intended
     * src/Pawn.java: Added threats function
     * src/Piece.java: Added abstract function threats for use in checking for checks
     * src/Rook.java: Added threats function
     * src/StandardChessGame.java: Implemented inCheck function and added another parameter of type Board to allow for checking of clone boards

Name: William Lai
Date: 04-02-2013
Description: ChangeLog overhaul
     * ChangeLog: Added several entries and clarified some file names

Name: Vincent Wong
Date: 03-29-2013
Description: Minor tweaks to game logic and added some GUI functionality
     * New files: Images/pieceBB.png, Images/pieceBK.png, Images/pieceBN.png, Images/pieceBP.png, Images/pieceBQ.png, Images/pieceBR.png, Images/pieceWB.png, Images/pieceWK.png, Images/pieceWN.png, Images/pieceWP.png, Images/pieceWQ.png, Images/pieceWR.png
     * src/Board.java: Added check for NULL in copy constructor, used placePiece function instead of directly accessing private member variable
     * src/Definitions.java: Changed values of NUMPIECES and PIECENAMES
     * src/Game.java: Imported java.awt.event.*, now implements MouseListener, added function setTurn
     * src/Move.java: Added toString function
     * src/StandardChessGame.java: Imported java.awt.event.*, added new member variable Piece m_selected, added MouseListener in constructor, used setTurn function, reimplemented paint function to reduce flickering, added temporary solution because moves.contain seems to have an issue, added functions mousePressed, select, moveSelected, update, and stop for GUI
     * src/StandardChessGameGraphics.java: Made some constants final and changed data structure to one Map instead of a Map and an ArrayList, added functions drawSelected, getRow, getCol

Name: Vincent Wong
Date: 03-28-2013
Description: Some changes to data and toString, made Game class an Applet, and added StandardChessGameGraphics class for graphics
     * New files: Images/pieceB.png, Images/pieceK.png, Images/pieceN.png, Images/pieceP.png, Images/pieceQ.png, Images/pieceR.png, src/StandardChessGameGraphics.java
     * src/Bishop.java: Added color parameter to constructors, removed toString function
     * src/Definitions.java: Added new constants NUMPIECES and PIECENAMES
     * src/Game.java: Now extends Applet and implements Runnable, remove init function
     * src/King.java: Added color parameter to constructors, removed toString function
     * src/Knight.java: Added color parameter to constructors, removed toString function
     * src/Pawn.java: Added color parameter to constructors, removed toString function
     * src/Piece.java: Added name field, added color and name to constructors, added accessor function getName, added utility function toString
     * src/Queen.java: Added color parameter to constructors, removed toString function
     * src/Rook.java: Added color parameter to constructors, removed toString function
     * src/StandardChessGame.java: Added private member variables of type Thread and StandardChessGameGraphics, overhauled init funciton, added new function run, add new function paint
     * src/StandardChessGameGraphics.java: Created new class that draws pieces

Name: William Lai
Date: 03-18-2013
Description: Added copy constructors, clone functions, and added more logic for move validity checking.
     * src/Bishop.java: Added copy constructor and clone function
     * src/Board.java: Added copy constructor
     * src/King.java: Added copy constructor and clone function
     * src/Knight.java: Added copy constructor and clone function
     * src/Pawn.java: Added copy constructor and clone function
     * src/Piece.java: Added abstract clone function
     * src/Queen.java: Added copy constructor and clone function
     * src/Rook.java: Added copy constructor and clone function
     * src/StandardChessGame.java: Changed name of member variable from 'm_board' to 'm_game_board' to prevent ambiguity with variable in Board class, and added some more logic to check for move validity (not yet complete)

Name: William Lai
Date: 03-09-2013
Description: Started implementing isLegalMove function in StandardChessGame class
Changes:
     * src/StandardChessGame.java: Implemented most of isLegalMove function
     * src/King.java: Added TODO note about adding castling to list of moves

Name: William Lai
Date: 02-28-2013
Description: Made minor changes and added new class StandardChessGame.
Changes:
     * src/StandardChessGame.java: Created class and wrote stub skeleton
     * src/Board.java: Added isLegalSquare helper function, implemented getPiece function with bounds checking, removed inCheck function.
     * src/Game.java: Renamed isLegal function to isLegalMove

Name: William Lai
Date: 02-19-2013
Description: Implemented all of the moves functions in each class and added helper functions that made them easier to implement.
Changes:
     * src/Piece.java: Added some helper functions
     * src/Queen.java: Finished implementing moves function
     * src/King.java: Implemented moves function
     * src/Bishop.java: Implemented moves function
     * src/Knight.java: Implemented moves function
     * src/Rook.java: Implemented moves function
     * src/Board.java: Added static helper function isLegal

Name: William Lai
Date: 02-14-2013
Description: Made some changes and additions
Changes:
     * src/Piece.java: Added setPos function
     * src/Pawn.java: Implemented moves function
     * src/Queen.java: Partially implemented moves function
     * src/Board.java: Implemented some functions
     * src/Move.java: Changed variable names

Name: William Lai
Date: 02-14-2013
Description: Initial interface of critical classes and files were created. Most complex functions are stubs and some classes and definitions have not been created yet.
Changes:
     * src/Piece.java: Created abstract class Piece
     * src/Pawn.java: Created Piece subclass Pawn
     * src/Knight.java: Created Piece subclass Knight
     * src/Bishop.java: Created Piece subclass Bishop
     * src/Rook.java: Created Piece subclass Rook
     * src/Queen.java: Created Piece subclass Queen
     * src/King.java: Created Piece subclass King
     * src/Board.java: Created class Board
     * src/Game.java: Created abstract class Game
     * src/Player.java: Created abstract class Player
     * src/Move.java: Created helper class Move
     * src/Definitions.java: Created definitions class Definitions
     * README.txt: Created README file
     * ChangeLog.txt: Created ChangeLog